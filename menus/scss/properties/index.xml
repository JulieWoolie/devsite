<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Style Properties on juliewoolie Docs</title><link>/menus/scss/properties/</link><description>Recent content in Style Properties on juliewoolie Docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/menus/scss/properties/index.xml" rel="self" type="application/rss+xml"/><item><title>background-color</title><link>/menus/scss/properties/background-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/background-color/</guid><description>Sets the background color of an element.
Field Value Cascades Yes Default value transparent Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { background-color: red; } p { background-color: #f00; } p { background-color: #ff0000; } p { background-color: #ff0000ff; } p { background-color: rgb(255, 0, 0); } p { background-color: hsl(0, 100%, 50%); }</description></item><item><title>border-color</title><link>/menus/scss/properties/border-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/border-color/</guid><description>Sets the color of an element&amp;rsquo;s border
Field Value Cascades No Default value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { border-color: red; } p { border-color: #f00; } p { border-color: #ff0000; } p { border-color: #ff0000ff; } p { border-color: rgb(255, 0, 0); } p { border-color: hsl(0, 100%, 50%); } See also Borders</description></item><item><title>Borders</title><link>/menus/scss/properties/border/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/border/</guid><description>Borders create a visual border on the outside of an element.
In normal CSS, borders are declared with a single property, but in Delphi, borders are treated the same as padding, just with a different color (set with border-color)
Field Value Cascades No Default value 0 Borders can be set individually with these properties:
border-top border-right border-bottom border-left Or defined with the border shorthand.
border color is determined by the border-color property.</description></item><item><title>color</title><link>/menus/scss/properties/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/color/</guid><description>Sets the color of the text displayed on elements.
Field Value Cascades Yes Initial value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { color: red; } p { color: #f00; } p { color: #ff0000; } p { color: #ff0000ff; } p { color: rgb(255, 0, 0); } p { color: hsl(0, 100%, 50%); }</description></item><item><title>Margins</title><link>/menus/scss/properties/margins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/margins/</guid><description>Margins are the empty space around elements used to create space.
Field Value Cascades No Default value 0 Margins can be set individually with these properties:
margin-top margin-right margin-bottom margin-left Or defined with the margin shorthand.
Shorthand examples // Sets all sides to have 1 pixel of margin. margin: 1px; // Top and bottom have 1 pixel of margin // Left and right have 3 pixels of margin margin: 1px 3px; // Top has 1 pixel of margin // Left and right have 1ch of margin // Bottom has 5 pixels of margin margin: 1px 1ch 5px; // Top has 1ch of margin // Right has 2em of margin // Bottom has 3% of margin // Left has 4vw of margin margin: 1ch 2em 3% 4vw; Individual example // Sets all sides to have 1 pixel of margin.</description></item><item><title>Outline</title><link>/menus/scss/properties/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/outline/</guid><description>Outlines are the same as Borders, except one layer outward.
In normal CSS, outlines are declared with a single property, but in Delphi, outlines are treated the same as padding, just with a different color (set with outline-color)
Field Value Cascades No Default value 0 Outlines can be set individually with these properties:
outline-top outline-right outline-bottom outline-left Or defined with the outline shorthand.
Outline color is determined by the outline-color property.</description></item><item><title>outline-color</title><link>/menus/scss/properties/outline-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/outline-color/</guid><description>Sets the outline color of an element.
Field Value Cascades Yes Default value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { outline-color: red; } p { outline-color: #f00; } p { outline-color: #ff0000; } p { outline-color: #ff0000ff; } p { outline-color: rgb(255, 0, 0); } p { outline-color: hsl(0, 100%, 50%); }</description></item><item><title>Padding</title><link>/menus/scss/properties/padding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/padding/</guid><description>Padding extends the background, creating a space between the content of an element and its borders.
Field Value Cascades No Default value 0 Padding can be set individually with these properties:
padding-top padding-right padding-bottom padding-left Or defined with the padding shorthand.
Shorthand examples // Sets all sides to have 1 pixel of padding. padding: 1px; // Top and bottom have 1 pixel of padding // Left and right have 3 pixels of padding padding: 1px 3px; // Top has 1 pixel of padding // Left and right have 1ch of padding // Bottom has 5 pixels of padding padding: 1px 1ch 5px; // Top has 1ch of padding // Right has 2em of padding // Bottom has 3% of padding // Left has 4vw of padding padding: 1ch 2em 3% 4vw; Individual example // Sets all sides to have 1 pixel of padding.</description></item><item><title>Text Decoration</title><link>/menus/scss/properties/text-deco/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/text-deco/</guid><description>Text decoration in Delphi is done with 5 boolean CSS properties.
Field Value Cascades Yes Default value false Decoration properties Property name Description bold Sets whether the text is bold italic Sets whether the text is italic underlined Sets if the text is underlined strikethrough Sets if the text has a line through it obfuscated Makes the text cycle through different characters each frame, appearing obfuscated Examples p { bold: true; italic: true; underlined: true; strikethrough: true; obfuscated: true; }</description></item><item><title>text-shadow</title><link>/menus/scss/properties/text-shadow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/text-shadow/</guid><description>Sets whether the text has a shadow.
Field Value Cascades Yes Default value false Values Accepts any expression or value that resolves to a boolean value.
Examples p { text-shadow: false; } p { text-shadow: true; }</description></item><item><title>z-index</title><link>/menus/scss/properties/zindex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/zindex/</guid><description>In web CSS the z-index element is only available in a positioned element, but in Delphi this controls the rendering depth of an element regardless of layout context. (See Notes for more info)
Field Value Cascades No Default value 0 Values The Z index property accepts any expression or value that resolves to an integer.
Examples p { z-index: 3; } Notes In Delphi, every element is rendered with display entities which are rotated and positioned along a plane (the document view screen).</description></item></channel></rss>