<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arcadius Docs on juliewoolie Docs</title><link>/</link><description>Recent content in Arcadius Docs on juliewoolie Docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Colors</title><link>/menus/scss/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/color/</guid><description>Hex values Hex values are prefixed by a # character and specify a color using hex digits. There are 3 types of valid hex sequences:
#rgb (3 character long) This is a shorter equivalent to #rrggbb. #rrggbb (6 characters long) #rrggbbaa (8 characters long) Includes alpha component for transparency. Examples @warn #fff; // =&amp;gt; white @warn #ff0000; // =&amp;gt; red @warn #ff0000c0; // =&amp;gt; #c0ff0000 Color Functions List of Color functions</description></item><item><title>Commands</title><link>/menus/command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/command/</guid><description>The /delphi command can be used in .mcfunction files inside of data packs and can be used with /execute commands.
Syntax Pattern Description &amp;lt;argument-name&amp;gt; Required argument, replace with appropriate value. [argument-name] Optional argument, replace with appropriate value. argument-name Enter this literally, as shown. /delphi open Permission delphi.commands Full list of arguments /delphi open &amp;lt;player&amp;gt; &amp;lt;page path&amp;gt; /delphi open &amp;lt;player&amp;gt; &amp;lt;page path&amp;gt; [instance name] /delphi open &amp;lt;players&amp;gt;|all-players &amp;lt;page path&amp;gt; &amp;lt;x y z&amp;gt; [instance name] /delphi open &amp;lt;players&amp;gt;|all-players &amp;lt;page path&amp;gt; &amp;lt;x y z&amp;gt; &amp;lt;yaw&amp;gt; &amp;lt;pitch&amp;gt; [instance name] Description Opens a page for a player or players.</description></item><item><title>Units</title><link>/menus/scss/units/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/units/</guid><description>Suffix Unit type Description ch length Relative to the size of the &amp;lsquo;0&amp;rsquo; character in minecraft&amp;rsquo;s minecraft:default font px length Relative to 1/40th (see notes below) vw length Relative to 1/100th of the width of the document screen vh length Relative to 1/100th of the height of the document screen m length Relative to the size of 1 block cm length Relative to 1/100th of a block % length Relative to the parent&amp;rsquo;s size deg angle Represents an angle in degrees.</description></item><item><title>&lt;option/> tag</title><link>/menus/header/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/header/options/</guid><description>Any key/value pair is valid and will be stored in the document, for scripts or the system to use.
Options are declared inside &amp;lt;head&amp;gt; tag with the following syntax:
&amp;lt;option name=&amp;#34;option name&amp;#34; value=&amp;#34;option value&amp;#34; /&amp;gt; You can also omit the value
&amp;lt;option name=&amp;#34;option name&amp;#34;/&amp;gt; When you access an option with an omitted value (with document.getOption(name: string) for example) it will return an empty string. If several values for the same option are set in a page, the last valid one is used.</description></item><item><title>&lt;style/> tag</title><link>/menus/header/style/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/header/style/</guid><description>The style tag is used for connecting SCSS stylesheets to the document. This tag can be declared as many times as needed to link multiple stylesheets.
You can either specify a filepath to an SCSS file using the src attribute, or write SCSS inside of the style element.
Attributes Attribute Value Description Example src stylesheet file path Specifies the file path of a stylesheet to use in the current document .</description></item><item><title>Javadocs</title><link>/menus/jd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/jd/</guid><description>Current version Delphi Menu Plugin 0.5.0 (Latest) Past Versions Delphi Menu Plugin 0.4.3</description></item><item><title>Modules</title><link>/menus/api/modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/api/modules/</guid><description>Modules are the very basis of the delphi plugin&amp;rsquo;s menu loader and resource system.
To put it shortly, modules are namespaces that can be accessed by the Delphi plugin to load resources such as XML, JSON, SCSS or any kind of text files. Modules can either be directories or .zip files inside the plugins/Delphi/modules directory, or they can be registered by other plugins with the Java API.
If you&amp;rsquo;ve been using the Delphi plugin, you&amp;rsquo;ve almost definitely used modules.</description></item><item><title>mouse-enter</title><link>/menus/events/mouse-enter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/events/mouse-enter/</guid><description>Details Field Value Bubbles true Cancellable false Type MouseEvent Tags All</description></item><item><title>&lt;java-object> tag</title><link>/menus/header/java-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/header/java-object/</guid><description>The &amp;lt;java-object/&amp;gt; element is used to link to a specific java (or Kotlin) class to load and invoke as the document is loaded. This element uses the class-name attribute to find a class.
When a class is found, the system will first try to find a public static void onDomInitialize(Document) method in the class, if found, it is invoked.
If not found, then the system will look for a public constructor with a single Document parameter.</description></item><item><title>mouse-exit</title><link>/menus/events/mouse-exit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/events/mouse-exit/</guid><description>Details Field Value Bubbles true Cancellable false Type MouseEvent Tags All</description></item><item><title>Resource Paths</title><link>/menus/paths/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/paths/</guid><description>They consist of 3 parts: The module name, The file path and a query. The file path and query are optional elements.
Elements Module names point to specific modules that are either in the plugins/Delphi/modules directory or have been registered by another plugin.
The File path is the path to a file inside of the module. The module name is separated from the file path by a : character.
The Query is a set key-value pairs that specify additional parameters for the module to use.</description></item><item><title>&lt;script> elements</title><link>/menus/header/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/header/script/</guid><description>Attributes Attribute Value Description Example defer void If the attribute is present, the loaded script is not executed until the document has finished lodaing defer src file path File path to the script file containing the JS code src=&amp;quot;script.js&amp;quot; You can specify either the src attribute to load the script from that file, or write JS code directly inside the &amp;lt;script/&amp;gt; element itself
Examples &amp;lt;script src=&amp;#34;script.js&amp;#34;/&amp;gt; &amp;lt;script defer src=&amp;#34;script.js&amp;#34;/&amp;gt; &amp;lt;script&amp;gt; console.</description></item><item><title>mouse-move</title><link>/menus/events/mouse-move/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/events/mouse-move/</guid><description>This event is not fired if a player&amp;rsquo;s cursor exits or enters an element. In those cases, either the mouse-exit or mouse-enter events are fired instead.
Details Field Value Bubbles false Cancellable false Type MouseEvent Tags All</description></item><item><title>click</title><link>/menus/events/click/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/events/click/</guid><description>Details Field Value Bubbles false Cancellable false Type MouseEvent Tags All</description></item><item><title>Font Data</title><link>/menus/fonts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/fonts/</guid><description>Delphi requires font measurement files to properly measure font sizes for layout and rendering.
These font files can be placed in plugins/Delphi/data/fonts.
JSON Format font-id (Required) The minecraft resource identifier of the font (eg: minecraft:default)
bold-modifier (Optional) Defaults to 1
How much is added to an individual character&amp;rsquo;s measurement when the text is currently bold.
height (Optional) Defaults to 8
The pixel height of the characters.
priority (Optional) Defaults to 0</description></item><item><title>&lt;button> element</title><link>/menus/body/button/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/button/</guid><description>Attributes Attribute Value Description Example action string Action for the button to perform when clicked action=&amp;quot;cmd: tp %player% 0 100 0&amp;quot; action-trigger string Specifies whether left or right clicking
triggers the action attribute.
&amp;quot;left&amp;quot; by default. action-trigger=&amp;quot;right&amp;quot; enabled boolean Disables / enables the button enabled=&amp;quot;false&amp;quot; Action attribute Makes the button element to perform an action when clicked.
Action Description Example close Closes the menu close cmd: &amp;lt;command&amp;gt; Executes a command as console.</description></item><item><title>&lt;canvas> element</title><link>/menus/body/canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/canvas/</guid><description>Attributes Attribute Value Description Example width integer Width of the canvas, if not set, defaults to 16 width=16 height integer Height of the canvas, if not set, defaults to 16 height=16 Modifying the Canvas Currently, a &amp;lt;canvas&amp;gt; element can only be modified through the Java or JS APIs. Here is a quick example of how to do so:
index.xml script.js &amp;lt;delphi&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script defer src=&amp;#34;script.js&amp;#34;/&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;#34;canvas&amp;#34; width=&amp;#34;64&amp;#34; height=&amp;#34;64&amp;#34;/&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/delphi&amp;gt; const canvas = document.</description></item><item><title>&lt;chat-component> element</title><link>/menus/body/chat-component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/chat-component/</guid><description>This element lets you use a JSON text component for text content on a page.
Note At time of writing, only vanilla english translations are supported, non-vanilla or non-english messages may be rendered incorrectly with incorrect sizes. Attributes Attribute Value Description Example src path Path to a text or JSON file that contains the component&amp;rsquo;s contents. src=&amp;quot;./text.json&amp;quot; type string Format the text is stored in. Supported values: json, minimessage. type=&amp;quot;json&amp;quot; Default Styling // None Examples &amp;lt;chat-component&amp;gt; {&amp;#34;text&amp;#34;: &amp;#34;Hello, world!</description></item><item><title>&lt;input/> element</title><link>/menus/body/input/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/input/</guid><description>Input elements take input from players
Attributes Attribute Value Description Example type input type An input type, changes how the input is displayed and validated. type=&amp;quot;number&amp;quot; placeholder string Placeholder text when no input has been given. placeholder=&amp;quot;Enter name...&amp;quot; enabled boolean Whether the element is disabled or not.
true by default enabled=&amp;quot;false&amp;quot; prompt string When clicked, this prompt is shown to a player to tell them to input text prompt=&amp;quot;Type your password&amp;quot; type Attribute Value Description Input example text (Default) Regular text input, no validation or rendering changes are applied Hello, world!</description></item><item><title>&lt;item/> element</title><link>/menus/body/item/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/item/</guid><description>Displays an item on the menu. This element cannot have child elements.
The displayed item can be set with either the src attribute or by writing the item data JSON inside the element.
Attributes Attribute Value Description Example src path A Resource Path to the item&amp;rsquo;s data. src=&amp;quot;item.json&amp;quot; hide-item-tooltip boolean Whether to show the item&amp;rsquo;s tooltip or
not when the element is hovered over.
true by default hide-item-tooltip=&amp;quot;true&amp;quot; advanced-item-tooltips boolean Whether to show the item tooltip</description></item><item><title>background-color</title><link>/menus/scss/properties/background-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/background-color/</guid><description>Sets the background color of an element.
Field Value Cascades Yes Default value transparent Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { background-color: red; } p { background-color: #f00; } p { background-color: #ff0000; } p { background-color: #ff0000ff; } p { background-color: rgb(255, 0, 0); } p { background-color: hsl(0, 100%, 50%); }</description></item><item><title>border-color</title><link>/menus/scss/properties/border-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/border-color/</guid><description>Sets the color of an element&amp;rsquo;s border
Field Value Cascades No Default value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { border-color: red; } p { border-color: #f00; } p { border-color: #ff0000; } p { border-color: #ff0000ff; } p { border-color: rgb(255, 0, 0); } p { border-color: hsl(0, 100%, 50%); } See also Borders</description></item><item><title>Borders</title><link>/menus/scss/properties/border/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/border/</guid><description>Borders create a visual border on the outside of an element.
In normal CSS, borders are declared with a single property, but in Delphi, borders are treated the same as padding, just with a different color (set with border-color)
Field Value Cascades No Default value 0 Borders can be set individually with these properties:
border-top border-right border-bottom border-left Or defined with the border shorthand.
border color is determined by the border-color property.</description></item><item><title>clamp(min, value, max)</title><link>/menus/scss/functions/clamp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/clamp/</guid><description>@function clamp($min, $value, $max) Parameters min
Lower (most negative) bound. value
Preferred value. max
Upper (most positive) bound. Returns Either the min, value, or max parameter.
min is returned if value is less than min.
max is returned if value is greater than max.
val is returned if value is greater than min and less than max.
Examples @debug clamp(1 10 100); // =&amp;gt; 10 @debug clamp(1 -2 100); // =&amp;gt; 1 @debug clamp(1 1000 100); // =&amp;gt; 100 @debug clamp(2px 14px 30px); // =&amp;gt; 14px See also min(a, b) max(a, b)</description></item><item><title>color</title><link>/menus/scss/properties/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/color/</guid><description>Sets the color of the text displayed on elements.
Field Value Cascades Yes Initial value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { color: red; } p { color: #f00; } p { color: #ff0000; } p { color: #ff0000ff; } p { color: rgb(255, 0, 0); } p { color: hsl(0, 100%, 50%); }</description></item><item><title>cos(x)</title><link>/menus/scss/functions/cos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/cos/</guid><description>@function cos($angle) Parameters angle
An angle, or any number. If the input has no unit, then it&amp;rsquo;s treated as radians. Returns The cosine of the angle angle, between -1 and 1, unless the angle is infinity or -infinity, in which case, NaN is returned.</description></item><item><title>flex-basis</title><link>/menus/scss/properties/flex-basis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/flex-basis/</guid><description>Flex basis specifies the main base size of flex items, If a flex container&amp;rsquo;s flex-direction is column, this acts like the height property, but if the direction is row, this acts like the width property.
Field Value Cascades No Initial value auto Applies To flex items Values Accepts any expression or value that resolves to a &amp;lt;length&amp;gt; value.
Examples span { flex-basis: 25%; } span { flex-basis: 15px; }</description></item><item><title>flex-grow</title><link>/menus/scss/properties/flex-grow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/flex-grow/</guid><description>The flex growth determines if or how much a flex item grows in a flexbox container when there is extra space.
If set to 0, an element won&amp;rsquo;t grow at all, if set to any value above that, it will. If there are multiple elements with a positive grow value in a flexbox container, the flex-grow value acts as a weight. For example, if all elements have growth value of 1, they all grow an equal amount, if one has a growth value of 2, it will grow more than the others.</description></item><item><title>flex-shrink</title><link>/menus/scss/properties/flex-shrink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/flex-shrink/</guid><description>The flex shrink determines if or how much a flex item shrinks in a flexbox container when there is not enough space for all elements.
If all elements in a flex container have a shrink value of 0, all elements will shrink equally. If any have a positive shrink value, only those will shrink. The larger the shrink value, the more they&amp;rsquo;ll shrink.
Field Value Cascades No Initial value 0 Applies To flex items Values Accepts any expression or value that resolves to an integer value.</description></item><item><title>Gaps</title><link>/menus/scss/properties/gaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/gaps/</guid><description>Gaps are empty spaces between elements in a flex container. There are 2 types of gaps, column and row gaps.
Field Value Cascades No Initial value 0 Applies To flex containers Values Accepts any expression or value that resolves to an auto or a &amp;lt;length&amp;gt;.
Examples span { gap: 0; } span { gap: 2px; } span { /* Equivalent to the above example */ row-gap: 2px; column-gap: 2px; } span { gap: 1px 2px; } span { /* Equivalent to the above example */ row-gap: 1px; column-gap: 2px; }</description></item><item><title>get-property(name)</title><link>/menus/scss/functions/get-property/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/get-property/</guid><description>@function get-property($property-name) If this function is called from a context where there are no style properties (outside of a style rule), then an error will be raised.
Parameters property-name
Name of the property to get the value of. Returns The value of the specified property, may be null, if the property has not explicitly been set.
Examples .class { margin-left: 2px; @debug get-property(&amp;#34;margin-left&amp;#34;); // 2.0px; } .class2 { @debug get-property(&amp;#34;margin-left&amp;#34;); // null } @debug get-property(&amp;#34;margin&amp;#34;); // Error!</description></item><item><title>hsl(hue, saturation, lightness)</title><link>/menus/scss/functions/hsl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/hsl/</guid><description>@function hsl($hue, $saturation, $lightness, $alpha: 1.0) Parameters hue
Hue color component. Can be defined as plain number (treated the same as degrees) or as a number with an angle measurement (deg, rad, grad, turn). saturation
Saturation color component. Can either be a 0.0 to 1.0 value, or a 0% to 100% value. lightness
Lightness color component. Can either be a 0.0 to 1.0 value, or a 0% to 100% value. alpha (Optional)</description></item><item><title>if(condition, if-true, if-false)</title><link>/menus/scss/functions/if/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/if/</guid><description>@function if($condition, $if-true, $if-false) Parameters condition
A truthy or falsey value. if-true
The value returned if the $condition parameter evaulates to true. if-false
The value returned if the $condition parameter evaulates to false. Returns Either the second parameter if the first parameter evaluates to a truthy value, or the third parameter otherwise.
Examples @debug if(true, 1px, 2px); // 1px; @debug if(false, 1px, 2px); // 2px;</description></item><item><title>lighten(color)</title><link>/menus/scss/functions/lighten/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/lighten/</guid><description>@function lighten($color, $amount: 25%) Adds the specified amount to each of the specified color&amp;rsquo;s channels. If amount is not specified, it defaults to 25%.
Parameters color
Color input value, must be a valid color. amount (Optional)
Amount to lighten the color. If not specified, defaults to 25%. Return value Modified color
Examples @debug lighten(darkgreen); // =&amp;gt; #007d00 @debug lighten(white); // =&amp;gt; white</description></item><item><title>Margins</title><link>/menus/scss/properties/margins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/margins/</guid><description>Margins are the empty space around elements used to create space.
Field Value Cascades No Default value 0 Margins can be set individually with these properties:
margin-top margin-right margin-bottom margin-left Or defined with the margin shorthand.
Shorthand examples // Sets all sides to have 1 pixel of margin. margin: 1px; // Top and bottom have 1 pixel of margin // Left and right have 3 pixels of margin margin: 1px 3px; // Top has 1 pixel of margin // Left and right have 1ch of margin // Bottom has 5 pixels of margin margin: 1px 1ch 5px; // Top has 1ch of margin // Right has 2em of margin // Bottom has 3% of margin // Left has 4vw of margin margin: 1ch 2em 3% 4vw; Individual example // Sets all sides to have 1 pixel of margin.</description></item><item><title>max(a, b)</title><link>/menus/scss/functions/max/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/max/</guid><description>@function max($a, $b) Parameters a
The first value b
The second value Returns Either the a or b. a is returned if it is greater than b, otherwise b is returned.
Examples See also clamp(min, value, max) min(a, b)</description></item><item><title>min(a, b)</title><link>/menus/scss/functions/min/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/min/</guid><description>@function min($a, $b) Parameters a
The first value b
The second value Returns Either the a or b. a is returned if it is less than b, otherwise b is returned.
See also clamp(min, value, max) max(a, b)</description></item><item><title>Minimessage elements</title><link>/menus/body/minimessage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/minimessage/</guid><description>Delphi includes support for a number of tags that aim to replicate the styling of minimessage text.
This means that &amp;lt;yellow&amp;gt;Hello, &amp;lt;bold&amp;gt;world&amp;lt;/bold&amp;gt;!&amp;lt;/yellow&amp;gt; is valid and will render correctly in Delphi menus.
List of supported tags &amp;lt;black&amp;gt; &amp;lt;dark_blue&amp;gt; &amp;lt;dark-blue&amp;gt; &amp;lt;dark_green&amp;gt; &amp;lt;dark-green&amp;gt; &amp;lt;dark_aqua&amp;gt; &amp;lt;dark-aqua&amp;gt; &amp;lt;dark_red&amp;gt; &amp;lt;dark-red&amp;gt; &amp;lt;dark_purple&amp;gt; &amp;lt;dark-purple&amp;gt; &amp;lt;gold&amp;gt; &amp;lt;gray&amp;gt; &amp;lt;grey&amp;gt; &amp;lt;dark_gray&amp;gt; &amp;lt;dark_grey&amp;gt; &amp;lt;dark-gray&amp;gt; &amp;lt;dark-grey&amp;gt; &amp;lt;blue&amp;gt; &amp;lt;green&amp;gt; &amp;lt;aqua&amp;gt; &amp;lt;red&amp;gt; &amp;lt;light_purple&amp;gt; &amp;lt;light-purple&amp;gt; &amp;lt;purple&amp;gt; &amp;lt;yellow&amp;gt; &amp;lt;white&amp;gt; Limits Some tags used by the Minimessage format are not possible to support in XML, such as the &amp;lt;gradient&amp;gt; tag in Minimessage.</description></item><item><title>Outline</title><link>/menus/scss/properties/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/outline/</guid><description>Outlines are the same as Borders, except one layer outward.
In normal CSS, outlines are declared with a single property, but in Delphi, outlines are treated the same as padding, just with a different color (set with outline-color)
Field Value Cascades No Default value 0 Outlines can be set individually with these properties:
outline-top outline-right outline-bottom outline-left Or defined with the outline shorthand.
Outline color is determined by the outline-color property.</description></item><item><title>outline-color</title><link>/menus/scss/properties/outline-color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/outline-color/</guid><description>Sets the outline color of an element.
Field Value Cascades Yes Default value black Values Accepts any expression or value that resolves to a color value.
See SCSS / Colors for more info
Examples p { outline-color: red; } p { outline-color: #f00; } p { outline-color: #ff0000; } p { outline-color: #ff0000ff; } p { outline-color: rgb(255, 0, 0); } p { outline-color: hsl(0, 100%, 50%); }</description></item><item><title>Padding</title><link>/menus/scss/properties/padding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/padding/</guid><description>Padding extends the background, creating a space between the content of an element and its borders.
Field Value Cascades No Default value 0 Padding can be set individually with these properties:
padding-top padding-right padding-bottom padding-left Or defined with the padding shorthand.
Shorthand examples // Sets all sides to have 1 pixel of padding. padding: 1px; // Top and bottom have 1 pixel of padding // Left and right have 3 pixels of padding padding: 1px 3px; // Top has 1 pixel of padding // Left and right have 1ch of padding // Bottom has 5 pixels of padding padding: 1px 1ch 5px; // Top has 1ch of padding // Right has 2em of padding // Bottom has 3% of padding // Left has 4vw of padding padding: 1ch 2em 3% 4vw; Individual example // Sets all sides to have 1 pixel of padding.</description></item><item><title>rgb(red, green, blue)</title><link>/menus/scss/functions/rgb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/rgb/</guid><description>@function rgb($red, $green, $blue, $alpha: 1.0) Creates a color value out of the specified red, green and blue components. Any of the RGB components can be specified either as a percentage from 0 to 100 or as a plain number from 0 to 255.
Parameters red
Red color component green
Green color component blue
Blue color component alpha (Optional)
Alpha color component. This parameter is optional, if it&amp;rsquo;s omitted, a value of 1.</description></item><item><title>set-property(name, value, important)</title><link>/menus/scss/functions/set-property/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/set-property/</guid><description>@function set-property($property-name, $value, $important: false) If this function is called from a context where there are no style properties (outside of a style rule), then an error will be raised.
Parameters property-name
Name of the property to set the value of. value
The new value of the property. important (Optional)
Whether the value should be marked as important (Same as using !important when setting a style property)
If not specified, defaults to false.</description></item><item><title>sin(x)</title><link>/menus/scss/functions/sin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/sin/</guid><description>@function sin($angle) Parameters angle
An angle, or any number. If the input has no unit, then it&amp;rsquo;s treated as radians. Returns The sine of the angle angle, between -1 and 1, unless the angle is infinity or -infinity, in which case, NaN is returned.</description></item><item><title>tan(x)</title><link>/menus/scss/functions/tan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/functions/tan/</guid><description>@function tan($angle) Parameters angle
An angle, or any number. If the input has no unit, then it&amp;rsquo;s treated as radians. Returns The tangent of the angle angle.
If the angle is infinity or -infinity, NaN is returned. If the angle is -0, -0 is returned.</description></item><item><title>Text Decoration</title><link>/menus/scss/properties/text-deco/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/text-deco/</guid><description>Text decoration in Delphi is done with 5 boolean CSS properties.
Field Value Cascades Yes Default value false Decoration properties Property name Description bold Sets whether the text is bold italic Sets whether the text is italic underlined Sets if the text is underlined strikethrough Sets if the text has a line through it obfuscated Makes the text cycle through different characters each frame, appearing obfuscated Examples p { bold: true; italic: true; underlined: true; strikethrough: true; obfuscated: true; }</description></item><item><title>Text Decoration Elements</title><link>/menus/body/text-deco/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/body/text-deco/</guid><description>Text decoration elements allow for quicker, easier styling of text with elements.
Bold styling: &amp;lt;b&amp;gt; &amp;lt;bold&amp;gt; &amp;lt;strong&amp;gt; Italic styling: &amp;lt;i&amp;gt; &amp;lt;italic&amp;gt; &amp;lt;em&amp;gt; Underlined styling: &amp;lt;u&amp;gt; &amp;lt;underlined&amp;gt; Strikethrough styling: &amp;lt;st&amp;gt; &amp;lt;strikethrough&amp;gt; Obfuscated styling: &amp;lt;obf&amp;gt; &amp;lt;obfuscated&amp;gt;</description></item><item><title>text-shadow</title><link>/menus/scss/properties/text-shadow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/text-shadow/</guid><description>Sets whether the text has a shadow.
Field Value Cascades Yes Default value false Values Accepts any expression or value that resolves to a boolean value.
Examples p { text-shadow: false; } p { text-shadow: true; }</description></item><item><title>vertical-align</title><link>/menus/scss/properties/vertical-align/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/vertical-align/</guid><description>Determines how items are vertically aligned in a regular block, aka, flow container.
Field Value Cascades No Initial value bottom Applies To Regular flow items Values Accepts any expression or value that resolves to an auto or sub, super, top, middle or bottom keyword.
super top middle bottom sub Examples span { vertical-align: super; } span { vertical-align: top; } span { vertical-align: middle; } span { vertical-align: bottom; } span { vertical-align: sub; } See also flex-shrink</description></item><item><title>z-index</title><link>/menus/scss/properties/zindex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/menus/scss/properties/zindex/</guid><description>In web CSS the z-index element is only available in a positioned element, but in Delphi this controls the rendering depth of an element regardless of layout context. (See Notes for more info)
Field Value Cascades No Default value 0 Values The Z index property accepts any expression or value that resolves to an integer.
Examples p { z-index: 3; } Notes In Delphi, every element is rendered with display entities which are rotated and positioned along a plane (the document view screen).</description></item></channel></rss>